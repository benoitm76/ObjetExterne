#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18010
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ScutedelaBDD
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MJSBDD")]
	public partial class DataSQLDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertT_CONSEILLER(T_CONSEILLER instance);
    partial void UpdateT_CONSEILLER(T_CONSEILLER instance);
    partial void DeleteT_CONSEILLER(T_CONSEILLER instance);
    partial void InsertT_TYPE_METIER(T_TYPE_METIER instance);
    partial void UpdateT_TYPE_METIER(T_TYPE_METIER instance);
    partial void DeleteT_TYPE_METIER(T_TYPE_METIER instance);
    partial void InsertT_EMPLOI(T_EMPLOI instance);
    partial void UpdateT_EMPLOI(T_EMPLOI instance);
    partial void DeleteT_EMPLOI(T_EMPLOI instance);
    partial void InsertT_ETUDIANT(T_ETUDIANT instance);
    partial void UpdateT_ETUDIANT(T_ETUDIANT instance);
    partial void DeleteT_ETUDIANT(T_ETUDIANT instance);
    partial void InsertT_METIER(T_METIER instance);
    partial void UpdateT_METIER(T_METIER instance);
    partial void DeleteT_METIER(T_METIER instance);
    partial void InsertT_PERSONNE(T_PERSONNE instance);
    partial void UpdateT_PERSONNE(T_PERSONNE instance);
    partial void DeleteT_PERSONNE(T_PERSONNE instance);
    #endregion
		
		public DataSQLDataContext() : 
				base(global::ScutedelaBDD.Properties.Settings.Default.MJSBDDConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataSQLDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataSQLDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataSQLDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataSQLDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<T_CONSEILLER> T_CONSEILLER
		{
			get
			{
				return this.GetTable<T_CONSEILLER>();
			}
		}
		
		public System.Data.Linq.Table<T_TYPE_METIER> T_TYPE_METIER
		{
			get
			{
				return this.GetTable<T_TYPE_METIER>();
			}
		}
		
		public System.Data.Linq.Table<T_EMPLOI> T_EMPLOI
		{
			get
			{
				return this.GetTable<T_EMPLOI>();
			}
		}
		
		public System.Data.Linq.Table<T_ETUDIANT> T_ETUDIANT
		{
			get
			{
				return this.GetTable<T_ETUDIANT>();
			}
		}
		
		public System.Data.Linq.Table<T_METIER> T_METIER
		{
			get
			{
				return this.GetTable<T_METIER>();
			}
		}
		
		public System.Data.Linq.Table<T_PERSONNE> T_PERSONNE
		{
			get
			{
				return this.GetTable<T_PERSONNE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_CONSEILLER")]
	public partial class T_CONSEILLER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ID_CONSEILLER;
		
		private string _NOM_CONSEILLER;
		
		private string _PRENOM_CONSEILLER;
		
		private EntitySet<T_PERSONNE> _T_PERSONNE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CONSEILLERChanging(decimal value);
    partial void OnID_CONSEILLERChanged();
    partial void OnNOM_CONSEILLERChanging(string value);
    partial void OnNOM_CONSEILLERChanged();
    partial void OnPRENOM_CONSEILLERChanging(string value);
    partial void OnPRENOM_CONSEILLERChanged();
    #endregion
		
		public T_CONSEILLER()
		{
			this._T_PERSONNE = new EntitySet<T_PERSONNE>(new Action<T_PERSONNE>(this.attach_T_PERSONNE), new Action<T_PERSONNE>(this.detach_T_PERSONNE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CONSEILLER", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal ID_CONSEILLER
		{
			get
			{
				return this._ID_CONSEILLER;
			}
			set
			{
				if ((this._ID_CONSEILLER != value))
				{
					this.OnID_CONSEILLERChanging(value);
					this.SendPropertyChanging();
					this._ID_CONSEILLER = value;
					this.SendPropertyChanged("ID_CONSEILLER");
					this.OnID_CONSEILLERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOM_CONSEILLER", DbType="VarChar(100)")]
		public string NOM_CONSEILLER
		{
			get
			{
				return this._NOM_CONSEILLER;
			}
			set
			{
				if ((this._NOM_CONSEILLER != value))
				{
					this.OnNOM_CONSEILLERChanging(value);
					this.SendPropertyChanging();
					this._NOM_CONSEILLER = value;
					this.SendPropertyChanged("NOM_CONSEILLER");
					this.OnNOM_CONSEILLERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRENOM_CONSEILLER", DbType="VarChar(100)")]
		public string PRENOM_CONSEILLER
		{
			get
			{
				return this._PRENOM_CONSEILLER;
			}
			set
			{
				if ((this._PRENOM_CONSEILLER != value))
				{
					this.OnPRENOM_CONSEILLERChanging(value);
					this.SendPropertyChanging();
					this._PRENOM_CONSEILLER = value;
					this.SendPropertyChanged("PRENOM_CONSEILLER");
					this.OnPRENOM_CONSEILLERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_CONSEILLER_T_PERSONNE", Storage="_T_PERSONNE", ThisKey="ID_CONSEILLER", OtherKey="ID_CONSEILLER")]
		public EntitySet<T_PERSONNE> T_PERSONNE
		{
			get
			{
				return this._T_PERSONNE;
			}
			set
			{
				this._T_PERSONNE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_PERSONNE(T_PERSONNE entity)
		{
			this.SendPropertyChanging();
			entity.T_CONSEILLER = this;
		}
		
		private void detach_T_PERSONNE(T_PERSONNE entity)
		{
			this.SendPropertyChanging();
			entity.T_CONSEILLER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_TYPE_METIER")]
	public partial class T_TYPE_METIER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TYPE_METIER;
		
		private decimal _ID_TYPE_METIER;
		
		private EntitySet<T_METIER> _T_METIER;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTYPE_METIERChanging(string value);
    partial void OnTYPE_METIERChanged();
    partial void OnID_TYPE_METIERChanging(decimal value);
    partial void OnID_TYPE_METIERChanged();
    #endregion
		
		public T_TYPE_METIER()
		{
			this._T_METIER = new EntitySet<T_METIER>(new Action<T_METIER>(this.attach_T_METIER), new Action<T_METIER>(this.detach_T_METIER));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYPE_METIER", DbType="VarChar(100)")]
		public string TYPE_METIER
		{
			get
			{
				return this._TYPE_METIER;
			}
			set
			{
				if ((this._TYPE_METIER != value))
				{
					this.OnTYPE_METIERChanging(value);
					this.SendPropertyChanging();
					this._TYPE_METIER = value;
					this.SendPropertyChanged("TYPE_METIER");
					this.OnTYPE_METIERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TYPE_METIER", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal ID_TYPE_METIER
		{
			get
			{
				return this._ID_TYPE_METIER;
			}
			set
			{
				if ((this._ID_TYPE_METIER != value))
				{
					this.OnID_TYPE_METIERChanging(value);
					this.SendPropertyChanging();
					this._ID_TYPE_METIER = value;
					this.SendPropertyChanged("ID_TYPE_METIER");
					this.OnID_TYPE_METIERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_TYPE_METIER_T_METIER", Storage="_T_METIER", ThisKey="ID_TYPE_METIER", OtherKey="ID_TYPE_METIER")]
		public EntitySet<T_METIER> T_METIER
		{
			get
			{
				return this._T_METIER;
			}
			set
			{
				this._T_METIER.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_METIER(T_METIER entity)
		{
			this.SendPropertyChanging();
			entity.T_TYPE_METIER = this;
		}
		
		private void detach_T_METIER(T_METIER entity)
		{
			this.SendPropertyChanging();
			entity.T_TYPE_METIER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_EMPLOI")]
	public partial class T_EMPLOI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ID_EMPLOI;
		
		private decimal _ID_METIER;
		
		private decimal _ID_PERSONNE;
		
		private string _NOM_EMPLOI;
		
		private EntityRef<T_METIER> _T_METIER;
		
		private EntityRef<T_PERSONNE> _T_PERSONNE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_EMPLOIChanging(decimal value);
    partial void OnID_EMPLOIChanged();
    partial void OnID_METIERChanging(decimal value);
    partial void OnID_METIERChanged();
    partial void OnID_PERSONNEChanging(decimal value);
    partial void OnID_PERSONNEChanged();
    partial void OnNOM_EMPLOIChanging(string value);
    partial void OnNOM_EMPLOIChanged();
    #endregion
		
		public T_EMPLOI()
		{
			this._T_METIER = default(EntityRef<T_METIER>);
			this._T_PERSONNE = default(EntityRef<T_PERSONNE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_EMPLOI", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal ID_EMPLOI
		{
			get
			{
				return this._ID_EMPLOI;
			}
			set
			{
				if ((this._ID_EMPLOI != value))
				{
					this.OnID_EMPLOIChanging(value);
					this.SendPropertyChanging();
					this._ID_EMPLOI = value;
					this.SendPropertyChanged("ID_EMPLOI");
					this.OnID_EMPLOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_METIER", DbType="Decimal(18,0) NOT NULL")]
		public decimal ID_METIER
		{
			get
			{
				return this._ID_METIER;
			}
			set
			{
				if ((this._ID_METIER != value))
				{
					if (this._T_METIER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_METIERChanging(value);
					this.SendPropertyChanging();
					this._ID_METIER = value;
					this.SendPropertyChanged("ID_METIER");
					this.OnID_METIERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PERSONNE", DbType="Decimal(18,0) NOT NULL")]
		public decimal ID_PERSONNE
		{
			get
			{
				return this._ID_PERSONNE;
			}
			set
			{
				if ((this._ID_PERSONNE != value))
				{
					if (this._T_PERSONNE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PERSONNEChanging(value);
					this.SendPropertyChanging();
					this._ID_PERSONNE = value;
					this.SendPropertyChanged("ID_PERSONNE");
					this.OnID_PERSONNEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOM_EMPLOI", DbType="VarChar(100)")]
		public string NOM_EMPLOI
		{
			get
			{
				return this._NOM_EMPLOI;
			}
			set
			{
				if ((this._NOM_EMPLOI != value))
				{
					this.OnNOM_EMPLOIChanging(value);
					this.SendPropertyChanging();
					this._NOM_EMPLOI = value;
					this.SendPropertyChanged("NOM_EMPLOI");
					this.OnNOM_EMPLOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_METIER_T_EMPLOI", Storage="_T_METIER", ThisKey="ID_METIER", OtherKey="ID_METIER", IsForeignKey=true)]
		public T_METIER T_METIER
		{
			get
			{
				return this._T_METIER.Entity;
			}
			set
			{
				T_METIER previousValue = this._T_METIER.Entity;
				if (((previousValue != value) 
							|| (this._T_METIER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_METIER.Entity = null;
						previousValue.T_EMPLOI.Remove(this);
					}
					this._T_METIER.Entity = value;
					if ((value != null))
					{
						value.T_EMPLOI.Add(this);
						this._ID_METIER = value.ID_METIER;
					}
					else
					{
						this._ID_METIER = default(decimal);
					}
					this.SendPropertyChanged("T_METIER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_PERSONNE_T_EMPLOI", Storage="_T_PERSONNE", ThisKey="ID_PERSONNE", OtherKey="ID_PERSONNE", IsForeignKey=true)]
		public T_PERSONNE T_PERSONNE
		{
			get
			{
				return this._T_PERSONNE.Entity;
			}
			set
			{
				T_PERSONNE previousValue = this._T_PERSONNE.Entity;
				if (((previousValue != value) 
							|| (this._T_PERSONNE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_PERSONNE.Entity = null;
						previousValue.T_EMPLOI.Remove(this);
					}
					this._T_PERSONNE.Entity = value;
					if ((value != null))
					{
						value.T_EMPLOI.Add(this);
						this._ID_PERSONNE = value.ID_PERSONNE;
					}
					else
					{
						this._ID_PERSONNE = default(decimal);
					}
					this.SendPropertyChanged("T_PERSONNE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_ETUDIANT")]
	public partial class T_ETUDIANT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ID_ETUDIANT;
		
		private decimal _ID_PERSONNE;
		
		private System.Nullable<long> _N_CARTE;
		
		private EntityRef<T_PERSONNE> _T_PERSONNE;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ETUDIANTChanging(decimal value);
    partial void OnID_ETUDIANTChanged();
    partial void OnID_PERSONNEChanging(decimal value);
    partial void OnID_PERSONNEChanged();
    partial void OnN_CARTEChanging(System.Nullable<long> value);
    partial void OnN_CARTEChanged();
    #endregion
		
		public T_ETUDIANT()
		{
			this._T_PERSONNE = default(EntityRef<T_PERSONNE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ETUDIANT", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal ID_ETUDIANT
		{
			get
			{
				return this._ID_ETUDIANT;
			}
			set
			{
				if ((this._ID_ETUDIANT != value))
				{
					this.OnID_ETUDIANTChanging(value);
					this.SendPropertyChanging();
					this._ID_ETUDIANT = value;
					this.SendPropertyChanged("ID_ETUDIANT");
					this.OnID_ETUDIANTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PERSONNE", DbType="Decimal(18,0) NOT NULL")]
		public decimal ID_PERSONNE
		{
			get
			{
				return this._ID_PERSONNE;
			}
			set
			{
				if ((this._ID_PERSONNE != value))
				{
					if (this._T_PERSONNE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PERSONNEChanging(value);
					this.SendPropertyChanging();
					this._ID_PERSONNE = value;
					this.SendPropertyChanged("ID_PERSONNE");
					this.OnID_PERSONNEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_N_CARTE", DbType="BigInt")]
		public System.Nullable<long> N_CARTE
		{
			get
			{
				return this._N_CARTE;
			}
			set
			{
				if ((this._N_CARTE != value))
				{
					this.OnN_CARTEChanging(value);
					this.SendPropertyChanging();
					this._N_CARTE = value;
					this.SendPropertyChanged("N_CARTE");
					this.OnN_CARTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_PERSONNE_T_ETUDIANT", Storage="_T_PERSONNE", ThisKey="ID_PERSONNE", OtherKey="ID_PERSONNE", IsForeignKey=true)]
		public T_PERSONNE T_PERSONNE
		{
			get
			{
				return this._T_PERSONNE.Entity;
			}
			set
			{
				T_PERSONNE previousValue = this._T_PERSONNE.Entity;
				if (((previousValue != value) 
							|| (this._T_PERSONNE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_PERSONNE.Entity = null;
						previousValue.T_ETUDIANT.Remove(this);
					}
					this._T_PERSONNE.Entity = value;
					if ((value != null))
					{
						value.T_ETUDIANT.Add(this);
						this._ID_PERSONNE = value.ID_PERSONNE;
					}
					else
					{
						this._ID_PERSONNE = default(decimal);
					}
					this.SendPropertyChanged("T_PERSONNE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_METIER")]
	public partial class T_METIER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ID_METIER;
		
		private decimal _ID_TYPE_METIER;
		
		private string _METIER;
		
		private EntitySet<T_EMPLOI> _T_EMPLOI;
		
		private EntityRef<T_TYPE_METIER> _T_TYPE_METIER;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_METIERChanging(decimal value);
    partial void OnID_METIERChanged();
    partial void OnID_TYPE_METIERChanging(decimal value);
    partial void OnID_TYPE_METIERChanged();
    partial void OnMETIERChanging(string value);
    partial void OnMETIERChanged();
    #endregion
		
		public T_METIER()
		{
			this._T_EMPLOI = new EntitySet<T_EMPLOI>(new Action<T_EMPLOI>(this.attach_T_EMPLOI), new Action<T_EMPLOI>(this.detach_T_EMPLOI));
			this._T_TYPE_METIER = default(EntityRef<T_TYPE_METIER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_METIER", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal ID_METIER
		{
			get
			{
				return this._ID_METIER;
			}
			set
			{
				if ((this._ID_METIER != value))
				{
					this.OnID_METIERChanging(value);
					this.SendPropertyChanging();
					this._ID_METIER = value;
					this.SendPropertyChanged("ID_METIER");
					this.OnID_METIERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TYPE_METIER", DbType="Decimal(18,0) NOT NULL")]
		public decimal ID_TYPE_METIER
		{
			get
			{
				return this._ID_TYPE_METIER;
			}
			set
			{
				if ((this._ID_TYPE_METIER != value))
				{
					if (this._T_TYPE_METIER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TYPE_METIERChanging(value);
					this.SendPropertyChanging();
					this._ID_TYPE_METIER = value;
					this.SendPropertyChanged("ID_TYPE_METIER");
					this.OnID_TYPE_METIERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_METIER", DbType="VarChar(100)")]
		public string METIER
		{
			get
			{
				return this._METIER;
			}
			set
			{
				if ((this._METIER != value))
				{
					this.OnMETIERChanging(value);
					this.SendPropertyChanging();
					this._METIER = value;
					this.SendPropertyChanged("METIER");
					this.OnMETIERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_METIER_T_EMPLOI", Storage="_T_EMPLOI", ThisKey="ID_METIER", OtherKey="ID_METIER")]
		public EntitySet<T_EMPLOI> T_EMPLOI
		{
			get
			{
				return this._T_EMPLOI;
			}
			set
			{
				this._T_EMPLOI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_TYPE_METIER_T_METIER", Storage="_T_TYPE_METIER", ThisKey="ID_TYPE_METIER", OtherKey="ID_TYPE_METIER", IsForeignKey=true)]
		public T_TYPE_METIER T_TYPE_METIER
		{
			get
			{
				return this._T_TYPE_METIER.Entity;
			}
			set
			{
				T_TYPE_METIER previousValue = this._T_TYPE_METIER.Entity;
				if (((previousValue != value) 
							|| (this._T_TYPE_METIER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_TYPE_METIER.Entity = null;
						previousValue.T_METIER.Remove(this);
					}
					this._T_TYPE_METIER.Entity = value;
					if ((value != null))
					{
						value.T_METIER.Add(this);
						this._ID_TYPE_METIER = value.ID_TYPE_METIER;
					}
					else
					{
						this._ID_TYPE_METIER = default(decimal);
					}
					this.SendPropertyChanged("T_TYPE_METIER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_EMPLOI(T_EMPLOI entity)
		{
			this.SendPropertyChanging();
			entity.T_METIER = this;
		}
		
		private void detach_T_EMPLOI(T_EMPLOI entity)
		{
			this.SendPropertyChanging();
			entity.T_METIER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_PERSONNE")]
	public partial class T_PERSONNE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ID_PERSONNE;
		
		private decimal _ID_CONSEILLER;
		
		private string _NOM;
		
		private string _PRENOM;
		
		private System.Nullable<System.DateTime> _DATE_DE_NAISSANCE;
		
		private System.Nullable<char> _SEXE;
		
		private EntitySet<T_EMPLOI> _T_EMPLOI;
		
		private EntitySet<T_ETUDIANT> _T_ETUDIANT;
		
		private EntityRef<T_CONSEILLER> _T_CONSEILLER;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PERSONNEChanging(decimal value);
    partial void OnID_PERSONNEChanged();
    partial void OnID_CONSEILLERChanging(decimal value);
    partial void OnID_CONSEILLERChanged();
    partial void OnNOMChanging(string value);
    partial void OnNOMChanged();
    partial void OnPRENOMChanging(string value);
    partial void OnPRENOMChanged();
    partial void OnDATE_DE_NAISSANCEChanging(System.Nullable<System.DateTime> value);
    partial void OnDATE_DE_NAISSANCEChanged();
    partial void OnSEXEChanging(System.Nullable<char> value);
    partial void OnSEXEChanged();
    #endregion
		
		public T_PERSONNE()
		{
			this._T_EMPLOI = new EntitySet<T_EMPLOI>(new Action<T_EMPLOI>(this.attach_T_EMPLOI), new Action<T_EMPLOI>(this.detach_T_EMPLOI));
			this._T_ETUDIANT = new EntitySet<T_ETUDIANT>(new Action<T_ETUDIANT>(this.attach_T_ETUDIANT), new Action<T_ETUDIANT>(this.detach_T_ETUDIANT));
			this._T_CONSEILLER = default(EntityRef<T_CONSEILLER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PERSONNE", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal ID_PERSONNE
		{
			get
			{
				return this._ID_PERSONNE;
			}
			set
			{
				if ((this._ID_PERSONNE != value))
				{
					this.OnID_PERSONNEChanging(value);
					this.SendPropertyChanging();
					this._ID_PERSONNE = value;
					this.SendPropertyChanged("ID_PERSONNE");
					this.OnID_PERSONNEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CONSEILLER", DbType="Decimal(18,0) NOT NULL")]
		public decimal ID_CONSEILLER
		{
			get
			{
				return this._ID_CONSEILLER;
			}
			set
			{
				if ((this._ID_CONSEILLER != value))
				{
					if (this._T_CONSEILLER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CONSEILLERChanging(value);
					this.SendPropertyChanging();
					this._ID_CONSEILLER = value;
					this.SendPropertyChanged("ID_CONSEILLER");
					this.OnID_CONSEILLERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOM", DbType="VarChar(100)")]
		public string NOM
		{
			get
			{
				return this._NOM;
			}
			set
			{
				if ((this._NOM != value))
				{
					this.OnNOMChanging(value);
					this.SendPropertyChanging();
					this._NOM = value;
					this.SendPropertyChanged("NOM");
					this.OnNOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRENOM", DbType="VarChar(100)")]
		public string PRENOM
		{
			get
			{
				return this._PRENOM;
			}
			set
			{
				if ((this._PRENOM != value))
				{
					this.OnPRENOMChanging(value);
					this.SendPropertyChanging();
					this._PRENOM = value;
					this.SendPropertyChanged("PRENOM");
					this.OnPRENOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE_DE_NAISSANCE", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATE_DE_NAISSANCE
		{
			get
			{
				return this._DATE_DE_NAISSANCE;
			}
			set
			{
				if ((this._DATE_DE_NAISSANCE != value))
				{
					this.OnDATE_DE_NAISSANCEChanging(value);
					this.SendPropertyChanging();
					this._DATE_DE_NAISSANCE = value;
					this.SendPropertyChanged("DATE_DE_NAISSANCE");
					this.OnDATE_DE_NAISSANCEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEXE", DbType="Char(1)")]
		public System.Nullable<char> SEXE
		{
			get
			{
				return this._SEXE;
			}
			set
			{
				if ((this._SEXE != value))
				{
					this.OnSEXEChanging(value);
					this.SendPropertyChanging();
					this._SEXE = value;
					this.SendPropertyChanged("SEXE");
					this.OnSEXEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_PERSONNE_T_EMPLOI", Storage="_T_EMPLOI", ThisKey="ID_PERSONNE", OtherKey="ID_PERSONNE")]
		public EntitySet<T_EMPLOI> T_EMPLOI
		{
			get
			{
				return this._T_EMPLOI;
			}
			set
			{
				this._T_EMPLOI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_PERSONNE_T_ETUDIANT", Storage="_T_ETUDIANT", ThisKey="ID_PERSONNE", OtherKey="ID_PERSONNE")]
		public EntitySet<T_ETUDIANT> T_ETUDIANT
		{
			get
			{
				return this._T_ETUDIANT;
			}
			set
			{
				this._T_ETUDIANT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_CONSEILLER_T_PERSONNE", Storage="_T_CONSEILLER", ThisKey="ID_CONSEILLER", OtherKey="ID_CONSEILLER", IsForeignKey=true)]
		public T_CONSEILLER T_CONSEILLER
		{
			get
			{
				return this._T_CONSEILLER.Entity;
			}
			set
			{
				T_CONSEILLER previousValue = this._T_CONSEILLER.Entity;
				if (((previousValue != value) 
							|| (this._T_CONSEILLER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_CONSEILLER.Entity = null;
						previousValue.T_PERSONNE.Remove(this);
					}
					this._T_CONSEILLER.Entity = value;
					if ((value != null))
					{
						value.T_PERSONNE.Add(this);
						this._ID_CONSEILLER = value.ID_CONSEILLER;
					}
					else
					{
						this._ID_CONSEILLER = default(decimal);
					}
					this.SendPropertyChanged("T_CONSEILLER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_EMPLOI(T_EMPLOI entity)
		{
			this.SendPropertyChanging();
			entity.T_PERSONNE = this;
		}
		
		private void detach_T_EMPLOI(T_EMPLOI entity)
		{
			this.SendPropertyChanging();
			entity.T_PERSONNE = null;
		}
		
		private void attach_T_ETUDIANT(T_ETUDIANT entity)
		{
			this.SendPropertyChanging();
			entity.T_PERSONNE = this;
		}
		
		private void detach_T_ETUDIANT(T_ETUDIANT entity)
		{
			this.SendPropertyChanging();
			entity.T_PERSONNE = null;
		}
	}
}
#pragma warning restore 1591
